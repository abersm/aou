strftime
strftime(Sys.time(), "%Y%m%d")
strftime(Sys.time(), "%Y%m%d")
spec
read_csv
apropos("read_csv")
abers::apropos("read_csv")
str_glue
pipe(glue::glue("gsutil cat {csv}"))
read_csv
readr::read_csv
bq_dataset_query
col_character
chr
col_types <- function(x = c("conditions", "person", "surveys", "procedures", "measurements", "drugs", "procedures")) {
x <- match.arg(x, choices = c("conditions", "person", "surveys", "procedures", "measurements", "drugs", "procedures"))
chr <- readr::col_character()
switch(
x,
conditions = {
readr::cols(
standard_concept_name = chr,
standard_concept_code = chr,
standard_vocabulary = chr,
condition_type_concept_name = chr,
stop_reason = chr,
visit_occurrence_concept_name = chr,
condition_source_value = chr,
source_concept_name = chr,
source_concept_code = chr,
source_vocabulary = chr,
condition_status_source_value = chr,
condition_status_concept_name = chr
)
},
measurements = {
readr::cols(
standard_concept_name = chr,
standard_concept_code = chr,
standard_vocabulary = chr,
measurement_type_concept_name = chr,
operator_concept_name = chr,
value_as_concept_name = chr,
unit_concept_name = chr,
visit_occurrence_concept_name = chr,
measurement_source_value = chr,
source_concept_name = chr,
source_concept_code = chr,
source_vocabulary = chr,
unit_source_value = chr,
value_source_value = chr
)
},
drugs = {
readr::cols(
standard_concept_name = chr,
standard_concept_code = chr,
standard_vocabulary = chr,
drug_type_concept_name = chr,
stop_reason = chr,
sig = chr,
route_concept_name = chr,
lot_number = chr,
visit_occurrence_concept_name = chr,
drug_source_value = chr,
source_concept_name = chr,
source_concept_code = chr,
source_vocabulary = chr,
route_source_value = chr,
dose_unit_source_value = chr
)
},
procedures = {
readr::cols(
standard_concept_name = chr,
standard_concept_code = chr,
standard_vocabulary = chr,
procedure_type_concept_name = chr,
modifier_concept_name = chr,
visit_occurrence_concept_name = chr,
procedure_source_value = chr,
source_concept_name = chr,
source_concept_code = chr,
source_vocabulary = chr,
modifier_source_value = chr
)
},
surveys = {
readr::cols(
survey = chr,
question = chr,
answer = chr,
survey_version_name = chr
)
},
person = {
readr::cols(
gender = chr,
race = chr,
ethnicity = chr,
sex_at_birth = chr,
self_reported_category = chr
)
}
)
}
col_types()
cols
c("conditions", "person", "surveys", "procedures", "measurements", "drugs", "procedures") %>% paste_roxygen()
identity({a <- 1})
a
rm(a)
c("patients", "pneumonia", "cv_complications", "demographics", "comorbidities", "substance_use") %>% paste_roxygen()
dots_as_quoted(a, b, c)
dots_as_quoted
?Sys.getenv
system2('gsutil', args = c('ls', getwd()), stdout = TRUE, stderr = TRUE)
allofus::aou_ls_bucket()
f(allofus::aou_ls_bucket)
allofus::aou_ls_workspace
a <- "a"
eval(a)
a <- "b"
eval(a)
sprintf('gsutil cp /home/rstudio/%s.Rdata "$bucket"', "a")
'gsutil cp /home/rstudio/%s.Rdata "$bucket"'
"gsutil cp /home/rstudio/%s.Rdata '$bucket'"
usethis::use_namespace()
usethis::use_description()
fn_uses("get_dots", "abers")
fn_uses("dots_as_quoted", "abers")
fn_uses("dots_as_unquoted", "abers")
fn_uses("dots_names", "abers")
fn_uses("dots_as_named_list", "abers")
fn_uses("tryElse", "abers")
fn_uses("tryNULL", "abers")
fn_uses(".fn_called", "abers")
fn_uses("get_piped_input", "abers")
fn_uses("arg_list", "abers")
fn_uses("is_POSIXct", "abers")
fn_uses("is_date", "abers")
str_trimws
fn_uses("round_nearest", "abers")
fn_uses("format_date", "abers")
fn_uses(".format_number_extreme", "abers")
fn_uses(".n_digits_before_decimal", "abers")
fn_uses(".n_digits_after_decimal", "abers")
fn_uses("format_scientific", "abers")
fn_uses("format_num_range", "abers")
fn_uses("format_percent", "abers")
fn_uses("int_to_fct", "abers")
vars_constant
fn_uses("is_column", "abers")
fn_uses(".matrix_component_to_df", "abers")
fn_uses("str_can_be_numeric", "abers")
fn_uses("str_extract", "abers")
fn_uses("str_left", "abers")
fn_uses("str_first_n", "abers")
fn_uses("str_date", "abers")
fn_uses("str_pad_leading_zero", "abers")
fn_uses("n_cores", "abers")
fn_uses("default_cores", "abers")
fn_uses("cor_coef", "abers")
fn_uses("pairs_list", "abers")
RM()
usethis::use_description()
s("pneumonia_dx_lookup")
read_csv("pneumonia_dx_lookup")
read_xlsx("pneumonia_dx_lookup")
df <- read_xlsx("pneumonia_dx_lookup")
pkg_path
js_dependency
package_file
o(shiny)
system.file
?system.file
system.file
system.file("inset/lookup/pneumonia_dx_lookup", package = "aou")
system.file("inset/lookup/pneumonia_dx_lookup", package = "aou", mustWork = TRUE)
system.file("inst/lookup/pneumonia_dx_lookup", package = "aou", mustWork = TRUE)
system.file("inst/lookup/pneumonia_dx_lookup.xlsx", package = "aou")
system.file("assets/bootstrap-3.4.1/default/stylesheets/bootstrap/_variables.scss", package = "fresh")
system.file("lookup/pneumonia_dx_lookup.xlsx", package = "aou")
read_xlsx
pkg_path("aou")
usethis::create_package(".")
devtools::create
devtools::build()
getwd()
devtools::document("aou")
devtools::document()
list_files("sql", ext = "R")
devtools::document()
devtools::document()
fn_uses("is_date", "abers")
fn_uses("convert_time", "abers")
RM()
str_remove_ext
getwd()
.safe_file_path
.safe_file_path
f(.safe_file_path)
f(str_remove_ext)
today
pkg_installed
s("substitute(x)")
o(aou_df_load)
o(write_raw_data)
file.path("a", "f")
file.path("a", "f.xslx")
file.path("a", "f.xlsx")
empty_df
empty_df %>% f
f(is_constant)
s("unclip <- function")
fn_uses("unclip", "abers")
s(".remove_grobs")
fn_uses(".remove_grobs", "abers")
fn_uses(".keep_grobs", "abers")
fn_uses("remove_plot_gridlines", "abers")
fn_uses("remove_plot_title", "abers")
fn_uses("remove_plot_axis_title", "abers")
fn_uses("remove_plot_axis_text", "abers")
fn_uses("remove_plot_axis_ticks", "abers")
fn_uses("remove_plot_axis_lines", "abers")
fn_uses("remove_plot_axis", "abers")
fn_uses("remove_plot_margins", "abers")
fn_uses(".set_theme_element_blank", "abers")
fn_uses("remove_plot_geoms", "abers")
fn_uses("resize_plot", "abers")
fn_uses("set_plot_labels", "abers")
s("tab_2_by_2.default <- ")
.quote_collapse
pchisq
move_cols
move_cols %>% f
s("summary_table_binary <- ")
is_binary_01
str_replace_numerics
.stop_input_class
.stop_input_class %>% f
.fn_called
f(.quote_collapse)
s("rect_min_density <- ")
fn_uses(".label_coords_optimal", "abers")
f(is_odd)
is_even %>% f
s("p_sig_dunn <- ")
s("interleave <- ")
s("ggplot_add.axis_x10 <- ")
s("get_plot_legend <- ")
theme_clean
s("geo_mean_plot <- ")
usethis::use_tidy_eval()
s("create_roc_data <- ")
str_reverse
match_fun
match_fun %>% f
s(".sig_compare_dunn <- ")
s("create_plot_df_facs <- ")
fn_uses(".df_to_split_vals", "abers")
s("create_df_sig_anno_grouped <- ")
s("write_raw_data <- ")
RM()
apropos("package")
apropos("package") %>% sort
remove.packages
?unloadNamespace
s("sql_patients")
fns_defined_in_file(~/Desktop/R packages/aou/R/aou_sql.R)
fns_defined_in_file("~/Desktop/R packages/aou/R/aou_sql.R")
obj_defined_in_file("~/Desktop/R packages/aou/R/aou_sql.R")
abers:::pkg_obj()
g <- pkg_fns("aou")
g <- g[startsWith(g, "sql")]
g
g <- as.list(asNamespace("aout"))
g <- as.list(asNamespace("aou"))
g <- names(g)[startsWith(names(g), "sql")]
g
abers::tryElse %>% f
rm(g)
usethis::use_data()
read_rda("aou_tables")
aou_tables <- read_rda("aou_tables")
usethis::use_data(aou_tables)
o(data)
usethis::edit_r_buildignore()
usethis::use_data_raw("comorb_lookup")
usethis::use_data_raw("pneumonia_lookup")
stringr::str_glue('
SELECT
DISTINCT c2.concept_name,
c2.concept_code,
c2.concept_id
FROM
`{CDR}.concept` c
JOIN `{CDR}.concept_ancestor` ca
ON c.concept_id = ca.ancestor_concept_id
JOIN `{CDR}.concept` c2
ON c2.concept_id = ca.descendant_concept_id
WHERE
c.concept_class_id = "Ingredient"
AND ({STATIN_DRUGS})')))
stringr::str_glue('
SELECT
DISTINCT c2.concept_name,
c2.concept_code,
c2.concept_id
FROM
`{CDR}.concept` c
JOIN `{CDR}.concept_ancestor` ca
ON c.concept_id = ca.ancestor_concept_id
JOIN `{CDR}.concept` c2
ON c2.concept_id = ca.descendant_concept_id
WHERE
c.concept_class_id = "Ingredient"
AND ({STATIN_DRUGS})')
RM()
install_if_missing_then_load(abers)
aou::install_if_missing_then_load(abers)
lib %>% f
pkg_required
aou::pkg_required
aou:::pkg_required
require
require %>% f
pkg_required
requireNamespace
re(getwd())
document(getwd())
Lib(brolgar)
abers:::dots_as_quoted
re(getwd())
Lib(brolgar)
re(getwd())
Lib(brolgar)
Lib(tidytree)
allofus::aou_observation_period
run_sql
write_raw_data
write_raw_data %>% f
write_raw_data
aou:::sql_demographics %>% copy
?aou_observation_period
re(getwd())
document(getwd())
pkg_data("aou")
pkg_data("aou") %>% names
document(getwd())
comorb_lookup
aou::comorb_lookup
aou:::comorb_lookup
## code to prepare `comorb_lookup` dataset goes here
comorb_lookup <- readxl::read_xlsx(system.file("inst/lookup/comorb_lookup.xlsx", package = "aou"), na = c("", "NA", "N/A", "na", "n/a", "?"), trim_ws = TRUE)
system.file("comorb_lookup.xlsx", package = "aou")
system.file("~/comorb_lookup.xlsx", package = "aou")
system.file("~/lookup/comorb_lookup.xlsx", package = "aou")
system.file("~/aou/inst/lookup/comorb_lookup.xlsx", package = "aou")
system.file("", package = "aou")
system.file("comorb_lookup", package = "aou")
system.file("comorb_lookup.xlsx", package = "aou")
document(getwd())
re(getwd())
system.file("comorb_lookup.xlsx", package = "aou")
system.file("pneumonia_lookup.xlsx", package = "aou")
system.file("lookup", package = "aou")
system.file("lookup/", package = "aou")
system.file("lookup/pneumonia_lookup.xlsx", package = "aou")
document(getwd())
re(getwd())
system.file("lookup/pneumonia_lookup.xlsx", package = "aou")
document(getwd()); re(getwd())
## code to prepare `comorb_lookup` dataset goes here
comorb_lookup <- readxl::read_xlsx(system.file("lookup/comorb_lookup.xlsx", package = "aou"), na = c("", "NA", "N/A", "na", "n/a", "?"), trim_ws = TRUE)
usethis::use_data(comorb_lookup, overwrite = TRUE)
## code to prepare `pneumonia_lookup` dataset goes here
pneumonia_lookup <- readxl::read_xlsx(system.file("lookup/pneumonia_lookup.xlsx", package = "aou"), na = c("", "NA", "N/A", "na", "n/a", "?"), trim_ws = TRUE)
usethis::use_data(pneumonia_lookup, overwrite = TRUE)
document(getwd()); re(getwd())
RM()
document(getwd()); re(getwd())
aou::comorb_lookup
as.integer(F)
sql_patients
sql_patients %>% cat()
s("dob = ")
?allofus::aou_workspace_to_bucket
f(aou_workspace_to_bucket)
f(allofus::aou_workspace_to_bucket)
f(aou::aou_workspace_to_bucket)
identical(aou::aou_workspace_to_bucket, allofus::aou_workspace_to_bucket)
compare(aou::aou_workspace_to_bucket, allofus::aou_workspace_to_bucket)
f(aou::aou_workspace_to_bucket)
?allofus::aou_workspace_to_bucket
c("Admission diagnosis", "Problem resolved", "Resolved condition", "Secondary discharge diagnosis", "Primary admission diagnosis", "Primary discharge diagnosis", "Confirmed diagnosis", "Suggested billing diagnosis", "Preliminary diagnosis", "Discharge diagnosis", "Primary diagnosis", "Active", "Secondary diagnosis", "No matching concept", "Final diagnosis (discharge)", "Established diagnosis", "Recurrence", "Established diagnosis") %>% tolower() %>% unique() %>% paste_quoted()
c("Constipation", "Polyuria", "Tear film insufficiency", "Female genital organ symptoms", "Derangement of medial meniscus", "Breast lump", "Dyspnea", "Cough", "Malaise", "Abnormal breathing", "Fever", "Nausea and vomitting", "Arthralgia of the ankle and/or foot", "Nausea", "Blood chemistry abnormal", "Fatigue", "Insomnia", "Dysuria", "Dehydration", "Palpitations", "Altered sensation of skin", "Impacted cerumen", "Visual disturbance", "Spasm", "Asthenia", "Otalgia", "Backache", "Headache", "Hypovolemia", "Dizziness and giddiness", "Breathing painful", "Anesthesia of skin", "Paresthesia", "Finding of frequency of urination", "Wheezing", "Increased frequency of urination", "Injury of head", "Localized edema", "Vomiting", "Traumatic or non-traumatic injury", "Atelectasis", "Nausea and vomiting", "Backache", "Discoloration of skin", "Disorder of bursa of shoulder region", "Abnormal body temperature", "Altered mental status", "Tachycardia", "Disorder of muscle", "Disorder of bone and articular cartilage", "Eruption", "Disorder of bone", "Renal colic", "Drug dependence", "Disorder of uterus", "Disorder of kidney and/or ureter", "Disorder of intestine", "Acquired absence of organ", "Anxiety state", "Abnormal findings on diagnostic imaging of lung", "Disorder of soft tissue", "Disorder of nasal cavity", "Allergic disposition", "Abnormally increased muscle contraction", "Complication of procedure", "Muscle and tendon injury") %>% tolower %>% paste_quoted()
c("Constipation", "Polyuria", "Tear film insufficiency", "Female genital organ symptoms", "Derangement of medial meniscus", "Breast lump", "Dyspnea", "Cough", "Malaise", "Abnormal breathing", "Fever", "Nausea and vomitting", "Arthralgia of the ankle and/or foot", "Nausea", "Blood chemistry abnormal", "Fatigue", "Insomnia", "Dysuria", "Dehydration", "Palpitations", "Altered sensation of skin", "Impacted cerumen", "Visual disturbance", "Spasm", "Asthenia", "Otalgia", "Backache", "Headache", "Hypovolemia", "Dizziness and giddiness", "Breathing painful", "Anesthesia of skin", "Paresthesia", "Finding of frequency of urination", "Wheezing", "Increased frequency of urination", "Injury of head", "Localized edema", "Vomiting", "Traumatic or non-traumatic injury", "Atelectasis", "Nausea and vomiting", "Backache", "Discoloration of skin", "Disorder of bursa of shoulder region", "Abnormal body temperature", "Altered mental status", "Tachycardia", "Disorder of muscle", "Disorder of bone and articular cartilage", "Eruption", "Disorder of bone", "Renal colic", "Drug dependence", "Disorder of uterus", "Disorder of kidney and/or ureter", "Disorder of intestine", "Acquired absence of organ", "Anxiety state", "Abnormal findings on diagnostic imaging of lung", "Disorder of soft tissue", "Disorder of nasal cavity", "Allergic disposition", "Abnormally increased muscle contraction", "Complication of procedure", "Muscle and tendon injury") %>% tolower %>% paste_quoted() %>% unique
c("Constipation", "Polyuria", "Tear film insufficiency", "Female genital organ symptoms", "Derangement of medial meniscus", "Breast lump", "Dyspnea", "Cough", "Malaise", "Abnormal breathing", "Fever", "Nausea and vomitting", "Arthralgia of the ankle and/or foot", "Nausea", "Blood chemistry abnormal", "Fatigue", "Insomnia", "Dysuria", "Dehydration", "Palpitations", "Altered sensation of skin", "Impacted cerumen", "Visual disturbance", "Spasm", "Asthenia", "Otalgia", "Backache", "Headache", "Hypovolemia", "Dizziness and giddiness", "Breathing painful", "Anesthesia of skin", "Paresthesia", "Finding of frequency of urination", "Wheezing", "Increased frequency of urination", "Injury of head", "Localized edema", "Vomiting", "Traumatic or non-traumatic injury", "Atelectasis", "Nausea and vomiting", "Backache", "Discoloration of skin", "Disorder of bursa of shoulder region", "Abnormal body temperature", "Altered mental status", "Tachycardia", "Disorder of muscle", "Disorder of bone and articular cartilage", "Eruption", "Disorder of bone", "Renal colic", "Drug dependence", "Disorder of uterus", "Disorder of kidney and/or ureter", "Disorder of intestine", "Acquired absence of organ", "Anxiety state", "Abnormal findings on diagnostic imaging of lung", "Disorder of soft tissue", "Disorder of nasal cavity", "Allergic disposition", "Abnormally increased muscle contraction", "Complication of procedure", "Muscle and tendon injury") %>% tolower %>% unique %>%  paste_quoted()
c("Unspecified disorder of skin and subcutaneous tissue", "Hematuria", "Other specified noninflammatory disorders of vagina", "Other specified symptoms and signs involving the circulatory and respiratory systems") %>% tolower %>% unique %>%  paste_quoted()
c("^abo|^absence|^absent|^accidental|^concussion|^abrasion|blepharitis|^contusion|^localized swelling|^superficial injury|^diarrhea|^lump|^mechanical|^menop|^nonvenomous|^numbness|\\bfracture\\b|\\bwound\\b|\\trauma|\\bburn\\b|^poison|^postoperat|^postproce|^postsurg|^postpart|^pressure|^preterm|^strain|^sprain|^swell|^edema|^injury|^lacer") %>% tolower %>% identical("^abo|^absence|^absent|^accidental|^concussion|^abrasion|blepharitis|^contusion|^localized swelling|^superficial injury|^diarrhea|^lump|^mechanical|^menop|^nonvenomous|^numbness|\\bfracture\\b|\\bwound\\b|\\trauma|\\bburn\\b|^poison|^postoperat|^postproce|^postsurg|^postpart|^pressure|^preterm|^strain|^sprain|^swell|^edema|^injury|^lacer")
c("Unspecified gastritis and gastroduodenitis, without mention of hemorrhage", "Unspecified gastritis and gastroduodenitis", "Other and unspecified noninfectious gastroenteritis and colitis", "Toxic gastroenteritis and colitis", "Gastritis and duodenitis", "Gastroenteritis and colitis due to radiation") %>% tolower() %>% paste_quoted()
c("Admission diagnosis", "Problem resolved", "Resolved condition", "Secondary discharge diagnosis", "Primary admission diagnosis", "Primary discharge diagnosis", "Confirmed diagnosis", "Suggested billing diagnosis", "Preliminary diagnosis", "Discharge diagnosis", "Primary diagnosis", "Active", "Secondary diagnosis", "No matching concept", "Final diagnosis (discharge)", "Established diagnosis", "Recurrence", "Established diagnosis") %>% tolower() %>% paste_quoted()
aou.phenotyper2::all_albumin %>% f
allofus::aou_table_info
allofus::aou_table_info %>% filter(table_name == "measurement")
allofus::aou_table_info %>% filter(table_name == "measurement") %>% unlist
g <- paste_unquoted()
g <- paste_quoted()
g
convert_si_units
rm(g)
sprintf("with all_codes as (select * from (
select distinct person_id, vocabulary_id, concept_code, condition_start_date as date
from condition_occurrence join concept on (condition_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, observation_date as date
from observation join concept on (observation_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, procedure_date as date
from procedure_occurrence join concept on (procedure_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, measurement_date as date
from measurement join concept on (measurement_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
))
select person_id, phecode, count(distinct date) as count from
all_codes join expanded_phecode using (vocabulary_id, concept_code)
group by person_id, phecode
")
sprintf("with all_codes as (select * from (
select distinct person_id, vocabulary_id, concept_code, condition_start_date as date
from condition_occurrence join concept on (condition_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, observation_date as date
from observation join concept on (observation_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, procedure_date as date
from procedure_occurrence join concept on (procedure_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, measurement_date as date
from measurement join concept on (measurement_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
))
select person_id, phecode, count(distinct date) as count from
all_codes join expanded_phecode using (vocabulary_id, concept_code)
group by person_id, phecode
") %>% identical("with all_codes as (select * from (
select distinct person_id, vocabulary_id, concept_code, condition_start_date as date
from condition_occurrence join concept on (condition_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, observation_date as date
from observation join concept on (observation_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, procedure_date as date
from procedure_occurrence join concept on (procedure_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
union distinct
select distinct person_id, vocabulary_id, concept_code, measurement_date as date
from measurement join concept on (measurement_source_concept_id=concept_id)
where vocabulary_id in ('ICD9CM','ICD10CM')
))
select person_id, phecode, count(distinct date) as count from
all_codes join expanded_phecode using (vocabulary_id, concept_code)
group by person_id, phecode
")
library(PheWAS)
devtools::install_github("PheWAS/PheWAS", upgrade_dependencies = FALSE)
createPhenotypes
library(PheWAS)
createPhenotypes
write_csv
PheWAS::phecode_rollup_map
PheWAS::phecode_map
sql
DATE_ADD
within
apropos("within")
f(.within_interval)
install.packages("remotes")
remotes::install_github("ohdsi/PheValuator")
install.packages("remotes")
dplyr::sql
collect
html2r("https://raw.githubusercontent.com/PheWAS/PhecodeXVocabulary/main/PhecodeX%20(version%201.0)")
gitbub_page <- "https://raw.githubusercontent.com/PheWAS/PhecodeXVocabulary/main/PhecodeX%20(version%201.0)"
raw_github_filename <- stringr::str_glue("{gitbub_page}/phecodeX_unrolled_ICD_CM.csv")
raw_github_filename
updated_phecodex_map <- readr::read_csv(raw_github_filename)
updated_phecodex_map
RM()
aou_concept_set
aou_concept_set %>% f
f(inDatabaseSchema)
ile.path(
Sys.getenv("WORKSPACE_BUCKET"),
"bq_exports",
"person_df_XYZ_LABEL_XYZ",
"person_df_XYZ_LABEL_XYZ_*.csv")
file.path(
Sys.getenv("WORKSPACE_BUCKET"),
"bq_exports",
"person_df_XYZ_LABEL_XYZ",
"person_df_XYZ_LABEL_XYZ_*.csv")
